rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // المنتجات - قراءة للجميع، كتابة للمديرين فقط
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // فئات المنتجات - قراءة للجميع، كتابة للمديرين
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // الطلبات - إدارة للمديرين، قراءة محدودة للعملاء
    match /orders/{orderId} {
      allow read, write: if isAdmin();
      allow read: if isAuthenticated() && isOwner(resource.data.customerId);
    }
    
    // المستخدمين - وصول محدود حسب الهوية
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read, update: if isAuthenticated() && userId == request.auth.uid;
    }
    
    // الإشعارات - إدارة للمديرين فقط
    match /notifications/{notificationId} {
      allow read, write: if isAdmin();
    }
    
    // العملاء - وصول محدود
    match /customers/{customerId} {
      allow read, write: if isAdmin();
    }
    
    // عناصر الطلبات
    match /orderItems/{itemId} {
      allow read, write: if isAdmin();
    }
    
    // الإحصائيات - قراءة للمديرين فقط
    match /stats/{statId} {
      allow read, write: if isAdmin();
    }
    
    // دوال المساعدة
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUser() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
  }
}